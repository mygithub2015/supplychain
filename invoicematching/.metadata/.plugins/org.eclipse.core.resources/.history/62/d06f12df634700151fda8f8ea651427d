package com.invoicematching.service;

import java.util.ArrayList;
import java.util.List;

import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.orm.hibernate3.HibernateTemplate;

import com.invoicematching.beans.Invoice;
import com.invoicematching.beans.InvoiceDetail;
import com.invoicematching.beans.Promotion;
import com.invoicematching.dao.InvoiceDao;


public class Service {
	
	public void service(Invoice invoice){
		ApplicationContext context = new ClassPathXmlApplicationContext("spring.xml");
		HibernateTemplate template = context.getBean("template",org.springframework.orm.hibernate3.HibernateTemplate.class);
		InvoiceDao dao = new InvoiceDao();
		dao.setTemplate(template);
		double totalAmt = 0.0;
		for(InvoiceDetail invDtl : invoice.getInvoiceDetail()){
			double tempPrice = invDtl.getTotalPrice();
			invDtl.setTotalPrice(tempPrice);
			totalAmt += tempPrice;
			dao.save(invDtl);
		}
		invoice.setTotalAmt(totalAmt);
		dao.save(invoice);
	}
	public void service(Promotion promotion){
		ApplicationContext context = new ClassPathXmlApplicationContext("spring.xml");
		HibernateTemplate template = context.getBean("template",org.springframework.orm.hibernate3.HibernateTemplate.class);
		InvoiceDao dao = new InvoiceDao();
		dao.setTemplate(template);
		double totalAmt = 0.0;
		for(InvoiceDetail invDtl : invoice.getInvoiceDetail()){
			double tempPrice = invDtl.getTotalPrice();
			invDtl.setTotalPrice(tempPrice);
			totalAmt += tempPrice;
			dao.save(invDtl);
		}
		invoice.setTotalAmt(totalAmt);
		dao.save(invoice);
	}
	public static void main(String[] args) {
		Invoice invoice1 = new Invoice();
		ApplicationContext context = new ClassPathXmlApplicationContext("spring.xml");
		HibernateTemplate template = context.getBean("template",org.springframework.orm.hibernate3.HibernateTemplate.class);
		InvoiceDao dao = new InvoiceDao();
		dao.setTemplate(template);
		InvoiceDetail invoiceDtl1 = new InvoiceDetail();
		invoiceDtl1.setInvoice(invoice1);
		invoiceDtl1.setItemNo(1);
		invoiceDtl1.setItemDesc("Book");
		invoiceDtl1.setQty(1);
		invoiceDtl1.setRate(500.00);
		invoiceDtl1.setTotalPrice(invoiceDtl1.getQty()*invoiceDtl1.getRate());
		InvoiceDetail invoiceDtl2 = new InvoiceDetail();
		invoiceDtl2.setInvoice(invoice1);
		invoiceDtl2.setItemNo(2);
		invoiceDtl2.setItemDesc("mobile");
		invoiceDtl2.setQty(1);
		invoiceDtl2.setRate(2000.00);
		invoiceDtl2.setTotalPrice(invoiceDtl2.getQty()*invoiceDtl2.getRate());
		List<InvoiceDetail> invoiceDtlSet = new ArrayList<InvoiceDetail>();
		invoiceDtlSet.add(invoiceDtl1);
		invoiceDtlSet.add(invoiceDtl2);
		invoice1.setInvoiceId("INV001");
		invoice1.setInvoiceDetail(invoiceDtlSet);
		double totalAmt = 0.0;
		for(InvoiceDetail id : invoiceDtlSet){
			totalAmt += id.getTotalPrice();
		}
		invoice1.setTotalAmt(totalAmt);
//		DaoImpl dao = new DaoImpl();
		dao.save(invoice1);
		dao.save(invoiceDtl1);
		dao.save(invoiceDtl2);
//		System.out.println(invoice1);
		
		
	}
}
